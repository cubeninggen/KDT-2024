#--------------------------------------------------------------------------------------------
# str 데이터 타입 전용 함수 즉, 메서드 살펴보기
#--------------------------------------------------------------------------------------------
msg='Hello 0705'

# [원소/요소 인덱스 찾기 메서드 - find(문자,시작인덱스,끝인덱스-1)]
# - 'H'의 인덱스
idx=msg.find('H')
print(f'H의 인덱스 : {idx}')

# - '7'의 인덱스
idx=msg.find('7')
print(f'7의 인덱스 : {idx}')

# - 'llo'의 인덱스
idx=msg.find('llo')
print(f'llo의 시작위치 인덱스 : {idx}')

# - 'llO'의 인덱스 => 대소문자 일치, 존제하지 않으면 -1로 반환
idx=msg.find('llO')
print(f'llO의 시작위치 인덱스 : {idx}')

# [원소/요소 인덱스 찾기 메서드 - index(문자,시작인덱스,끝인덱스-1)]
# - 'H'의 인덱스 
idx=msg.index('H')
print(f'H의 인덱스 : {idx}')

# - 'h'의 인덱스 => 존제하지 않으면 Error 발생 
# => 존제여부 확인
if 'h' in msg:
    idx=msg.index('h')
    print(f'h의 인덱스 : {idx}')
else:
    print('h는 존제하지 않습니다.')

#--------------------------------------------------------------------------------------------
# 문자열에 동일한 문자가 여러개 존제하는 경우
#--------------------------------------------------------------------------------------------
msg='Good Luck Good'
idx=-1
for i in range(msg.count('o')):
    idx=msg.find('o',idx+1)
    print(f'{i}번째 o의 인덱스 : {idx}')

# # - 'o'의 인덱스 찾기 => 첫번쨰 'o' 인덱스
# idx=msg.find('o')
# print(f'o의 인덱스 : {idx}')

# # - 'o'의 인덱스 찾기 => 두번쨰 'o' 인덱스
# idx=msg.find('o',idx+1)
# print(f'두번째 o의 인덱스 : {idx}')

# # - 'o'의 인덱스 찾기 => 세번쨰 'o' 인덱스
# idx=msg.find('o',idx+1)
# print(f'세번째 o의 인덱스 : {idx}')

# # - 'o'의 인덱스 찾기 => 네번쨰 'o' 인덱스
# idx=msg.find('o',idx+1)
# print(f'네번째 o의 인덱스 : {idx}')

#--------------------------------------------------------------------------------------------
# 문자열의 뒷부분부터 찾는 메서드 ==> rfind(문자,시작인덱스,끝인덱스-1), rindex(문자,시작인덱스,끝인덱스-1)
#--------------------------------------------------------------------------------------------
msg='Happy'

# - 첫번쨰 'p'인덱스 찾기
#'Happy'
# 01234
# <----
idx=msg.rfind('p')
print(f'p의 인덱스 : {idx}')

# - 두번쨰 'p'인덱스 찾기
#'Happy'
# 012
# <--
idx=msg.rfind('p',0,idx)
print(f'p의 인덱스 : {idx}')

# - 파일명에서 확장자 txt, jpeg, xlsx, zip, gz 찾기
files=['hello.txt', '2024년_상반기_경제분석.doc', 'kakao_12345566879.jpg']
for i in files:
    dot=i.find('.')
    print(i[dot+1:])

for i in files:
    print((i.split('.'))[-1])